{"version":3,"sources":["vs/code/browser/workbench/fake","vs/code/browser/workbench/file:/root/github1s/lib/vscode/src/vs/code/browser/workbench/workbench.ts"],"names":["__m","deps","result","i","len","length","doCreateUri","path","queryValues","query","undefined","index","forEach","value","key","prefix","encodeURIComponent","uri_1","URI","parse","window","location","href","with","LocalStorageCredentialsProvider","[object Object]","authSessionInfo","authSessionElement","document","getElementById","authSessionElementAttribute","getAttribute","JSON","error","this","setPassword","product_1","default","urlProtocol","stringify","authService","providerId","scopes","map","id","accessToken","credentials","_credentials","serializedCredentials","localStorage","getItem","CREDENTIALS_OPENED_KEY","Array","isArray","setItem","service","account","doGetPassword","credential","password","doDeletePassword","push","save","logout","console","log","found","filter","Map","set","String","request_1","request","url","toString","cancellation_1","CancellationToken","None","PollingURLCallbackProvider","lifecycle_1","Disposable","_onCallback","_register","event_1","Emitter","onCallback","event","options","requestId","uuid_1","generateUuid","QUERY_KEYS","REQUEST_ID","scheme","authority","fragment","SCHEME","AUTHORITY","PATH","QUERY","FRAGMENT","periodicFetchCallback","Date","now","startTime","content","buffer_1","streamToBuffer","stream","byteLength","fire","revive","FETCH_TIMEOUT","setTimeout","FETCH_INTERVAL","WorkspaceProvider","workspace","payload","reuse","isSame","targetHref","createTargetUrl","browser_1","isStandalone","open","windows_1","isFolderToOpen","origin","pathname","QUERY_PARAM_FOLDER","folderUri","isWorkspaceToOpen","QUERY_PARAM_WORKSPACE","workspaceUri","QUERY_PARAM_EMPTY_WINDOW","QUERY_PARAM_PAYLOAD","workspaceA","workspaceB","resources_1","isEqual","network_1","Schemas","vscodeRemote","WindowIndicator","onDidChange","Event","repositoryOwner","repositoryName","uri","split","label","nls_1","localize","tooltip","route","util_1","parseGitHubUrl","config","from","owner","repo","branch","staticExtensions","enableSyncByDefault","webWorkerExtensionHostIframeSrc","_a","extension","extensionLocation","foundWorkspace","Object","create","logLevel","URL","searchParams","workspaceProvider","homeIndicator","icon","title","windowIndicator","hasRemote","settingsSyncOptions","enabled","enablementHandler","enablement","queryString","workbench_web_api_1","body","assign","log_1","parseLogLevel","productQualityChangeHandler","quality","urlCallbackProvider","credentialsProvider","call"],"mappings":"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","file":"workbench.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWorkbenchConstructionOptions, create, ICredentialsProvider, IURLCallbackProvider, IWorkspaceProvider, IWorkspace, IWindowIndicator, IHomeIndicator, IProductQualityChangeHandler, ISettingsSyncOptions } from 'vs/workbench/workbench.web.api';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { streamToBuffer } from 'vs/base/common/buffer';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { request } from 'vs/base/parts/request/browser/request';\nimport { isFolderToOpen, isWorkspaceToOpen } from 'vs/platform/windows/common/windows';\nimport { isEqual } from 'vs/base/common/resources';\nimport { isStandalone } from 'vs/base/browser/browser';\nimport { localize } from 'vs/nls';\nimport { Schemas } from 'vs/base/common/network';\nimport product from 'vs/platform/product/common/product';\nimport { parseLogLevel } from 'vs/platform/log/common/log';\nimport { parseGitHubUrl } from 'vs/github1s/util';\n\nfunction doCreateUri(path: string, queryValues: Map<string, string>): URI {\n\tlet query: string | undefined = undefined;\n\n\tif (queryValues) {\n\t\tlet index = 0;\n\t\tqueryValues.forEach((value, key) => {\n\t\t\tif (!query) {\n\t\t\t\tquery = '';\n\t\t\t}\n\n\t\t\tconst prefix = (index++ === 0) ? '' : '&';\n\t\t\tquery += `${prefix}${key}=${encodeURIComponent(value)}`;\n\t\t});\n\t}\n\n\treturn URI.parse(window.location.href).with({ path, query });\n}\n\ninterface ICredential {\n\tservice: string;\n\taccount: string;\n\tpassword: string;\n}\n\nclass LocalStorageCredentialsProvider implements ICredentialsProvider {\n\n\tstatic readonly CREDENTIALS_OPENED_KEY = 'credentials.provider';\n\n\tprivate readonly authService: string | undefined;\n\n\tconstructor() {\n\t\tlet authSessionInfo: { readonly id: string, readonly accessToken: string, readonly providerId: string, readonly canSignOut?: boolean, readonly scopes: string[][] } | undefined;\n\t\tconst authSessionElement = document.getElementById('vscode-workbench-auth-session');\n\t\tconst authSessionElementAttribute = authSessionElement ? authSessionElement.getAttribute('data-settings') : undefined;\n\t\tif (authSessionElementAttribute) {\n\t\t\ttry {\n\t\t\t\tauthSessionInfo = JSON.parse(authSessionElementAttribute);\n\t\t\t} catch (error) { /* Invalid session is passed. Ignore. */ }\n\t\t}\n\n\t\tif (authSessionInfo) {\n\t\t\t// Settings Sync Entry\n\t\t\tthis.setPassword(`${product.urlProtocol}.login`, 'account', JSON.stringify(authSessionInfo));\n\n\t\t\t// Auth extension Entry\n\t\t\tthis.authService = `${product.urlProtocol}-${authSessionInfo.providerId}.login`;\n\t\t\tthis.setPassword(this.authService, 'account', JSON.stringify(authSessionInfo.scopes.map(scopes => ({\n\t\t\t\tid: authSessionInfo!.id,\n\t\t\t\tscopes,\n\t\t\t\taccessToken: authSessionInfo!.accessToken\n\t\t\t}))));\n\t\t}\n\t}\n\n\tprivate _credentials: ICredential[] | undefined;\n\tprivate get credentials(): ICredential[] {\n\t\tif (!this._credentials) {\n\t\t\ttry {\n\t\t\t\tconst serializedCredentials = window.localStorage.getItem(LocalStorageCredentialsProvider.CREDENTIALS_OPENED_KEY);\n\t\t\t\tif (serializedCredentials) {\n\t\t\t\t\tthis._credentials = JSON.parse(serializedCredentials);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// ignore\n\t\t\t}\n\n\t\t\tif (!Array.isArray(this._credentials)) {\n\t\t\t\tthis._credentials = [];\n\t\t\t}\n\t\t}\n\n\t\treturn this._credentials;\n\t}\n\n\tprivate save(): void {\n\t\twindow.localStorage.setItem(LocalStorageCredentialsProvider.CREDENTIALS_OPENED_KEY, JSON.stringify(this.credentials));\n\t}\n\n\tasync getPassword(service: string, account: string): Promise<string | null> {\n\t\treturn this.doGetPassword(service, account);\n\t}\n\n\tprivate async doGetPassword(service: string, account?: string): Promise<string | null> {\n\t\tfor (const credential of this.credentials) {\n\t\t\tif (credential.service === service) {\n\t\t\t\tif (typeof account !== 'string' || account === credential.account) {\n\t\t\t\t\treturn credential.password;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tasync setPassword(service: string, account: string, password: string): Promise<void> {\n\t\tthis.doDeletePassword(service, account);\n\n\t\tthis.credentials.push({ service, account, password });\n\n\t\tthis.save();\n\n\t\ttry {\n\t\t\tif (password && service === this.authService) {\n\t\t\t\tconst value = JSON.parse(password);\n\t\t\t\tif (Array.isArray(value) && value.length === 0) {\n\t\t\t\t\tawait this.logout(service);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\tasync deletePassword(service: string, account: string): Promise<boolean> {\n\t\tconst result = await this.doDeletePassword(service, account);\n\n\t\tif (result && service === this.authService) {\n\t\t\ttry {\n\t\t\t\tawait this.logout(service);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate async doDeletePassword(service: string, account: string): Promise<boolean> {\n\t\tlet found = false;\n\n\t\tthis._credentials = this.credentials.filter(credential => {\n\t\t\tif (credential.service === service && credential.account === account) {\n\t\t\t\tfound = true;\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\n\t\tif (found) {\n\t\t\tthis.save();\n\t\t}\n\n\t\treturn found;\n\t}\n\n\tasync findPassword(service: string): Promise<string | null> {\n\t\treturn this.doGetPassword(service);\n\t}\n\n\tasync findCredentials(service: string): Promise<Array<{ account: string, password: string }>> {\n\t\treturn this.credentials\n\t\t\t.filter(credential => credential.service === service)\n\t\t\t.map(({ account, password }) => ({ account, password }));\n\t}\n\n\tprivate async logout(service: string): Promise<void> {\n\t\tconst queryValues: Map<string, string> = new Map();\n\t\tqueryValues.set('logout', String(true));\n\t\tqueryValues.set('service', service);\n\n\t\tawait request({\n\t\t\turl: doCreateUri('/auth/logout', queryValues).toString(true)\n\t\t}, CancellationToken.None);\n\t}\n}\n\nclass PollingURLCallbackProvider extends Disposable implements IURLCallbackProvider {\n\n\tstatic readonly FETCH_INTERVAL = 500; \t\t\t// fetch every 500ms\n\tstatic readonly FETCH_TIMEOUT = 5 * 60 * 1000; \t// ...but stop after 5min\n\n\tstatic readonly QUERY_KEYS = {\n\t\tREQUEST_ID: 'vscode-requestId',\n\t\tSCHEME: 'vscode-scheme',\n\t\tAUTHORITY: 'vscode-authority',\n\t\tPATH: 'vscode-path',\n\t\tQUERY: 'vscode-query',\n\t\tFRAGMENT: 'vscode-fragment'\n\t};\n\n\tprivate readonly _onCallback = this._register(new Emitter<URI>());\n\treadonly onCallback = this._onCallback.event;\n\n\tcreate(options?: Partial<UriComponents>): URI {\n\t\tconst queryValues: Map<string, string> = new Map();\n\n\t\tconst requestId = generateUuid();\n\t\tqueryValues.set(PollingURLCallbackProvider.QUERY_KEYS.REQUEST_ID, requestId);\n\n\t\tconst { scheme, authority, path, query, fragment } = options ? options : { scheme: undefined, authority: undefined, path: undefined, query: undefined, fragment: undefined };\n\n\t\tif (scheme) {\n\t\t\tqueryValues.set(PollingURLCallbackProvider.QUERY_KEYS.SCHEME, scheme);\n\t\t}\n\n\t\tif (authority) {\n\t\t\tqueryValues.set(PollingURLCallbackProvider.QUERY_KEYS.AUTHORITY, authority);\n\t\t}\n\n\t\tif (path) {\n\t\t\tqueryValues.set(PollingURLCallbackProvider.QUERY_KEYS.PATH, path);\n\t\t}\n\n\t\tif (query) {\n\t\t\tqueryValues.set(PollingURLCallbackProvider.QUERY_KEYS.QUERY, query);\n\t\t}\n\n\t\tif (fragment) {\n\t\t\tqueryValues.set(PollingURLCallbackProvider.QUERY_KEYS.FRAGMENT, fragment);\n\t\t}\n\n\t\t// Start to poll on the callback being fired\n\t\tthis.periodicFetchCallback(requestId, Date.now());\n\n\t\treturn doCreateUri('/callback', queryValues);\n\t}\n\n\tprivate async periodicFetchCallback(requestId: string, startTime: number): Promise<void> {\n\n\t\t// Ask server for callback results\n\t\tconst queryValues: Map<string, string> = new Map();\n\t\tqueryValues.set(PollingURLCallbackProvider.QUERY_KEYS.REQUEST_ID, requestId);\n\n\t\tconst result = await request({\n\t\t\turl: doCreateUri('/fetch-callback', queryValues).toString(true)\n\t\t}, CancellationToken.None);\n\n\t\t// Check for callback results\n\t\tconst content = await streamToBuffer(result.stream);\n\t\tif (content.byteLength > 0) {\n\t\t\ttry {\n\t\t\t\tthis._onCallback.fire(URI.revive(JSON.parse(content.toString())));\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\n\t\t\treturn; // done\n\t\t}\n\n\t\t// Continue fetching unless we hit the timeout\n\t\tif (Date.now() - startTime < PollingURLCallbackProvider.FETCH_TIMEOUT) {\n\t\t\tsetTimeout(() => this.periodicFetchCallback(requestId, startTime), PollingURLCallbackProvider.FETCH_INTERVAL);\n\t\t}\n\t}\n\n}\n\nclass WorkspaceProvider implements IWorkspaceProvider {\n\n\tstatic QUERY_PARAM_EMPTY_WINDOW = 'ew';\n\tstatic QUERY_PARAM_FOLDER = 'folder';\n\tstatic QUERY_PARAM_WORKSPACE = 'workspace';\n\n\tstatic QUERY_PARAM_PAYLOAD = 'payload';\n\n\tconstructor(\n\t\tpublic readonly workspace: IWorkspace,\n\t\tpublic readonly payload: object\n\t) { }\n\n\tasync open(workspace: IWorkspace, options?: { reuse?: boolean, payload?: object }): Promise<void> {\n\t\tif (options?.reuse && !options.payload && this.isSame(this.workspace, workspace)) {\n\t\t\treturn; // return early if workspace and environment is not changing and we are reusing window\n\t\t}\n\n\t\tconst targetHref = this.createTargetUrl(workspace, options);\n\t\tif (targetHref) {\n\t\t\tif (options?.reuse) {\n\t\t\t\twindow.location.href = targetHref;\n\t\t\t} else {\n\t\t\t\tif (isStandalone) {\n\t\t\t\t\twindow.open(targetHref, '_blank', 'toolbar=no'); // ensures to open another 'standalone' window!\n\t\t\t\t} else {\n\t\t\t\t\twindow.open(targetHref);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate createTargetUrl(workspace: IWorkspace, options?: { reuse?: boolean, payload?: object }): string | undefined {\n\n\t\t// Empty\n\t\tlet targetHref: string | undefined = undefined;\n\t\tif (!workspace) {\n\t\t\ttargetHref = `${document.location.origin}${document.location.pathname}?${WorkspaceProvider.QUERY_PARAM_EMPTY_WINDOW}=true`;\n\t\t}\n\n\t\t// Folder\n\t\telse if (isFolderToOpen(workspace)) {\n\t\t\ttargetHref = `${document.location.origin}${document.location.pathname}?${WorkspaceProvider.QUERY_PARAM_FOLDER}=${encodeURIComponent(workspace.folderUri.toString())}`;\n\t\t}\n\n\t\t// Workspace\n\t\telse if (isWorkspaceToOpen(workspace)) {\n\t\t\ttargetHref = `${document.location.origin}${document.location.pathname}?${WorkspaceProvider.QUERY_PARAM_WORKSPACE}=${encodeURIComponent(workspace.workspaceUri.toString())}`;\n\t\t}\n\n\t\t// Append payload if any\n\t\tif (options?.payload) {\n\t\t\ttargetHref += `&${WorkspaceProvider.QUERY_PARAM_PAYLOAD}=${encodeURIComponent(JSON.stringify(options.payload))}`;\n\t\t}\n\n\t\treturn targetHref;\n\t}\n\n\tprivate isSame(workspaceA: IWorkspace, workspaceB: IWorkspace): boolean {\n\t\tif (!workspaceA || !workspaceB) {\n\t\t\treturn workspaceA === workspaceB; // both empty\n\t\t}\n\n\t\tif (isFolderToOpen(workspaceA) && isFolderToOpen(workspaceB)) {\n\t\t\treturn isEqual(workspaceA.folderUri, workspaceB.folderUri); // same workspace\n\t\t}\n\n\t\tif (isWorkspaceToOpen(workspaceA) && isWorkspaceToOpen(workspaceB)) {\n\t\t\treturn isEqual(workspaceA.workspaceUri, workspaceB.workspaceUri); // same workspace\n\t\t}\n\n\t\treturn false;\n\t}\n\n\thasRemote(): boolean {\n\t\tif (this.workspace) {\n\t\t\tif (isFolderToOpen(this.workspace)) {\n\t\t\t\treturn this.workspace.folderUri.scheme === Schemas.vscodeRemote;\n\t\t\t}\n\n\t\t\tif (isWorkspaceToOpen(this.workspace)) {\n\t\t\t\treturn this.workspace.workspaceUri.scheme === Schemas.vscodeRemote;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\nclass WindowIndicator implements IWindowIndicator {\n\n\treadonly onDidChange = Event.None;\n\n\treadonly label: string;\n\treadonly tooltip: string;\n\treadonly command: string | undefined;\n\n\tconstructor(workspace: IWorkspace) {\n\t\tlet repositoryOwner: string | undefined = undefined;\n\t\tlet repositoryName: string | undefined = undefined;\n\n\t\tif (workspace) {\n\t\t\tlet uri: URI | undefined = undefined;\n\t\t\tif (isFolderToOpen(workspace)) {\n\t\t\t\turi = workspace.folderUri;\n\t\t\t} else if (isWorkspaceToOpen(workspace)) {\n\t\t\t\turi = workspace.workspaceUri;\n\t\t\t}\n\n\t\t\tif (uri?.scheme === 'github1s') {\n\t\t\t\t[repositoryOwner, repositoryName] = uri.authority.split('+');\n\t\t\t}\n\t\t}\n\n\t\t// Repo\n\t\tif (repositoryName && repositoryOwner) {\n\t\t\tthis.label = localize('playgroundLabelRepository', \"$(remote) GitHub1s: {0}/{1}\", repositoryOwner, repositoryName);\n\t\t\tthis.tooltip = localize('playgroundRepositoryTooltip', \"GitHub1s: {0}/{1}\", repositoryOwner, repositoryName);\n\t\t}\n\n\t\t// No Repo\n\t\telse {\n\t\t\tthis.label = localize('playgroundLabel', \"$(remote) GitHub1s\");\n\t\t\tthis.tooltip = localize('playgroundTooltip', \"GitHub1s\");\n\t\t}\n\t}\n}\n\n(function () {\n\tconst route = parseGitHubUrl(window.location.href);\n\tconst config: IWorkbenchConstructionOptions & { folderUri?: UriComponents, workspaceUri?: UriComponents } = {\n\t\tfolderUri: URI.from({ scheme: \"github1s\", path: '/', authority: `${route.owner}+${route.repo}+${route.branch}` }),\n\t\tstaticExtensions: [],\n\t\tenableSyncByDefault: false,\n\t\twebWorkerExtensionHostIframeSrc: document.getElementById('vscode-extension-host-iframe-src')?.getAttribute('data-settings') as string,\n};\n\n\t// Revive static extension locations\n\tif (Array.isArray(config.staticExtensions)) {\n\t\tconfig.staticExtensions.forEach(extension => {\n\t\t\textension.extensionLocation = URI.revive(extension.extensionLocation);\n\t\t});\n\t}\n\n\t// Find workspace to open and payload\n\tlet foundWorkspace = false;\n\tlet workspace: IWorkspace;\n\tlet payload = Object.create(null);\n\tlet logLevel: string | undefined = undefined;\n\n\tconst query = new URL(document.location.href).searchParams;\n\tquery.forEach((value, key) => {\n\t\tswitch (key) {\n\n\t\t\t// Folder\n\t\t\tcase WorkspaceProvider.QUERY_PARAM_FOLDER:\n\t\t\t\tworkspace = { folderUri: URI.parse(value) };\n\t\t\t\tfoundWorkspace = true;\n\t\t\t\tbreak;\n\n\t\t\t// Workspace\n\t\t\tcase WorkspaceProvider.QUERY_PARAM_WORKSPACE:\n\t\t\t\tworkspace = { workspaceUri: URI.parse(value) };\n\t\t\t\tfoundWorkspace = true;\n\t\t\t\tbreak;\n\n\t\t\t// Empty\n\t\t\tcase WorkspaceProvider.QUERY_PARAM_EMPTY_WINDOW:\n\t\t\t\tworkspace = undefined;\n\t\t\t\tfoundWorkspace = true;\n\t\t\t\tbreak;\n\n\t\t\t// Payload\n\t\t\tcase WorkspaceProvider.QUERY_PARAM_PAYLOAD:\n\t\t\t\ttry {\n\t\t\t\t\tpayload = JSON.parse(value);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error(error); // possible invalid JSON\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// Log level\n\t\t\tcase 'logLevel':\n\t\t\t\tlogLevel = value;\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\t// If no workspace is provided through the URL, check for config attribute from server\n\tif (!foundWorkspace) {\n\t\tif (config.folderUri) {\n\t\t\tworkspace = { folderUri: URI.revive(config.folderUri) };\n\t\t} else if (config.workspaceUri) {\n\t\t\tworkspace = { workspaceUri: URI.revive(config.workspaceUri) };\n\t\t} else {\n\t\t\tworkspace = undefined;\n\t\t}\n\t}\n\n\t// Workspace Provider\n\tconst workspaceProvider = new WorkspaceProvider(workspace, payload);\n\n\t// Home Indicator\n\tconst homeIndicator: IHomeIndicator = {\n\t\thref: `https://github.com/${route.owner}/${route.repo}`,\n\t\ticon: 'github',\n\t\ttitle: localize('home', \"Home\")\n\t};\n\n\t// Window indicator (unless connected to a remote)\n\tlet windowIndicator: WindowIndicator | undefined = undefined;\n\tif (!workspaceProvider.hasRemote()) {\n\t\twindowIndicator = new WindowIndicator(workspace);\n\t}\n\n\t// Product Quality Change Handler\n\tconst productQualityChangeHandler: IProductQualityChangeHandler = (quality) => {\n\t\tlet queryString = `quality=${quality}`;\n\n\t\t// Save all other query params we might have\n\t\tconst query = new URL(document.location.href).searchParams;\n\t\tquery.forEach((value, key) => {\n\t\t\tif (key !== 'quality') {\n\t\t\t\tqueryString += `&${key}=${value}`;\n\t\t\t}\n\t\t});\n\n\t\twindow.location.href = `${window.location.origin}?${queryString}`;\n\t};\n\n\t// settings sync options\n\tconst settingsSyncOptions: ISettingsSyncOptions | undefined = config.settingsSyncOptions ? {\n\t\tenabled: config.settingsSyncOptions.enabled,\n\t\tenablementHandler: (enablement) => {\n\t\t\tlet queryString = `settingsSync=${enablement ? 'true' : 'false'}`;\n\n\t\t\t// Save all other query params we might have\n\t\t\tconst query = new URL(document.location.href).searchParams;\n\t\t\tquery.forEach((value, key) => {\n\t\t\t\tif (key !== 'settingsSync') {\n\t\t\t\t\tqueryString += `&${key}=${value}`;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\twindow.location.href = `${window.location.origin}?${queryString}`;\n\t\t}\n\t} : undefined;\n\n\t// Finally create workbench\n\tcreate(document.body, {\n\t\t...config,\n\t\tlogLevel: logLevel ? parseLogLevel(logLevel) : undefined,\n\t\tsettingsSyncOptions,\n\t\thomeIndicator,\n\t\twindowIndicator,\n\t\tproductQualityChangeHandler,\n\t\tworkspaceProvider,\n\t\turlCallbackProvider: new PollingURLCallbackProvider(),\n\t\tcredentialsProvider: new LocalStorageCredentialsProvider()\n\t});\n})();\n"]}